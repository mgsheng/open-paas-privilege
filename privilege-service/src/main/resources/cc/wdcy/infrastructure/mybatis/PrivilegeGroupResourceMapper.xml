<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.open.opensass.privilege.infrastructure.mybatis.PrivilegeGroupResourceRepositoryMyBatis">
    <resultMap type="PrivilegeGroupResource" id="privilegeGroupResourceMap">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="group_id" property="groupId" jdbcType="VARCHAR"/>
        <result column="resource_id" property="resourceId" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="create_user" property="createUser" jdbcType="VARCHAR"/>
        <result column="create_userid" property="createUserId" jdbcType="VARCHAR"/>
        <result column="app_id" property="appId" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
		  id,
		  group_id,
		  resource_id,
		  create_time,
		  create_user,
		  create_userid,
		  app_id,
		  status
	</sql>
    <select id="findByGroupIdAndAppId" resultMap="privilegeGroupResourceMap" flushCache="true">
         select * from privilege_group_resource  where  group_id = #{groupId}
         and app_id=#{appId}
	</select>
    <select id="findByGroupIdAndResourceId" resultMap="privilegeGroupResourceMap" flushCache="true">
        select
        <include refid="Base_Column_List"/>
        from privilege_group_resource
        where group_id = #{groupId} and app_id = #{appId}
        <if test="resourceId != null and resourceId !=''">
            and resource_id=#{resourceId}
        </if>
        limit 1
    </select>
    <update id="updatePrivilegeGroupResource"
            parameterType="cn.com.open.opensass.privilege.model.PrivilegeGroupResource" flushCache="true">
        update privilege_group_resource set
        <if test="groupId != null and groupId !=''">
            group_id = #{groupId},
        </if>
        <if test="resourceId != null and resourceId !=''">
            resource_id = #{resourceId},
        </if>

        <if test="createUser != null and createUser !=''">
            create_user = #{createUser},
        </if>
        <if test="createUserId != null and createUserId !=''">
            create_userid = #{createUserId},
        </if>
        create_time = #{createTime}
        where id = #{id}
    </update>
    <insert id="saveprivilegeGroupResource" parameterType="PrivilegeGroupResource" useGeneratedKeys="true"
            keyProperty="id">
        insert into privilege_group_resource
        (group_id,resource_id,create_time,create_user,create_userid,app_id,status)
        values
        (#{groupId},#{resourceId},#{createTime},#{createUser},#{createUserId},#{appId},#{status})
    </insert>
    <delete id="deleteResource">
        delete from privilege_group_resource where group_id=#{groupId} and resource_id = #{resourceId} and app_id = #{appId}
    </delete>
    <delete id="deleteByGroup">
        delete from privilege_group_resource where group_id=#{groupId} and app_id=#{appId}
    </delete>
    <select id="findGprs" parameterType="String" resultMap="privilegeGroupResourceMap">
        select
        <include refid="Base_Column_List"/>
        from privilege_group_resource
        where group_id = #{groupId} and app_id = #{appId}
    </select>
    <select id="findResourceIdsByGroupId" parameterType="String" resultType="String" flushCache="true">
         select 
           resource_id
           from privilege_group_resource
         where  group_id = #{groupId}
	</select>
    <select id="findGprPage" resultMap="privilegeGroupResourceMap" flushCache="true">
        select * from privilege_group_resource where app_id=#{appId}
        <if test="groupId != null and groupId !=''">
            and group_id = #{groupId}
        </if>
        limit #{startRow},#{pageSize}
    </select>

    <insert id="batchUpdateResourceIds" parameterType="java.util.List">

        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            INSERT INTO privilege_group_resource (group_id, resource_id, create_user, create_time, create_userid,
            status, app_id)
            VALUES ('${item.groupId}',
            '${item.resourceIds}',
            '${item.createUser}',
            now(),
            '${item.createUserId}',
            ${item.status},
            '${item.appId}')
        </foreach>

    </insert>
    <delete id="batchDeleteResourceIdsByGroupIds" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            delete from privilege_group_resource where group_id='${item.groupId}' and app_id='${item.appId}' AND
            resource_id = '${item.resourceIds}'
        </foreach>

    </delete>
</mapper>