<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.open.opensass.privilege.infrastructure.mybatis.PrivilegeUserRepositoryMyBatis">
	<resultMap type="PrivilegeUser" id="privilegeUserMap">
		<id column="uid" property="uId" jdbcType="VARCHAR" />
		<result column="app_id" property="appId" jdbcType="VARCHAR" />
		<result column="privilege_roleid" property="privilegeRoleId" jdbcType="VARCHAR" />
		<result column="app_userid" property="appUserId" jdbcType="VARCHAR" />
		<result column="app_username" property="appUserName" jdbcType="VARCHAR" />
		<result column="dept_id" property="deptId" jdbcType="VARCHAR" />
		<result column="group_id" property="groupId" jdbcType="VARCHAR" />
		<result column="resource_id" property="resourceId" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="privilege_funid" property="privilegeFunId" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Insert_Column_List">
	  uid,
	  app_id,
	  privilege_roleid,
	  app_userid,
	  app_username,
	  dept_id,
	  group_id,
	  resource_id,
	  create_time,
	  privilege_funid
	</sql>
	
	<select id="findByUid" resultMap="privilegeUserMap" flushCache="true">
         select * from privilege_user
         where  uid = #{uId}
	</select>
 	<select id="findByAppIdAndAppUserId" resultMap="privilegeUserMap" flushCache="true">
 		select * from privilege_user where app_id=#{appId} and app_userid=#{appUserId}
 	</select>
   <select id="findUserResources"  resultType="java.lang.String" flushCache="true">
   SELECT d.base_url from privilege_user a,privilege_user_role b,privilege_role_resource c,privilege_resource d
   where  app_id=#{appId} and app_userid=#{appUserId}
   and a.uid=b.user_id and b.privilege_roleid=c.privilege_roleid and c.resource_id=d.resource_id 
 	</select>
    <update id="updatePrivilegeUser" parameterType="PrivilegeUser" flushCache="true">
        update privilege_user
        <trim prefix="set" suffixOverrides=",">
        <if test="privilegeRoleId != null and privilegeRoleId !=''" >
        privilege_roleid = #{privilegeRoleId},
        </if>
         <if test="resourceId != null and resourceId !=''" >
        resource_id = #{resourceId},
        </if>
         <if test="privilegeFunId != null and privilegeFunId !=''" >
        privilege_funid = #{privilegeFunId},
        </if>
         <if test="deptId != null and deptId !=''" >
        dept_id = #{deptId},
        </if>
         <if test="groupId != null and groupId !=''" >
        group_id = #{groupId},
        </if>
        </trim>
        where uid = #{uId}
    </update>
	<insert id="savePrivilegeUser" parameterType="PrivilegeUser" useGeneratedKeys="true" keyProperty="uId">
        insert into privilege_user (uid,app_id,privilege_roleid,app_userid,app_username,group_id,dept_id,create_time,resource_id,privilege_funid)
        values
        (#{uId},#{appId},#{privilegeRoleId},#{appUserId},#{appUserName},#{groupId},#{deptId},#{createTime},#{resourceId},#{privilegeFunId})
    </insert>
    <delete id="delUserByAppIdAndAppUserId">
    	delete from privilege_user where app_id=#{appId} and app_userid=#{appUserId}
    </delete>
    
    <delete id="delPrivilegeUserByUid">
        delete from privilege_user where uid=#{uId}
    </delete>
</mapper>