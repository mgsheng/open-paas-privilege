<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.open.opensass.privilege.infrastructure.mybatis.PrivilegeResourceRepositoryMyBatis">
    <resultMap type="PrivilegeResource" id="privilegeResourceMap">
        <id column="resource_id" property="resourceId" jdbcType="VARCHAR"/>
        <result column="menu_id" property="menuId" jdbcType="VARCHAR"/>
        <result column="resource_name" property="resourceName" jdbcType="VARCHAR"/>
        <result column="app_id" property="appId" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="create_user" property="createUser" jdbcType="VARCHAR"/>
        <result column="create_userid" property="createUserId" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="resource_rule" property="resourceRule" jdbcType="VARCHAR"/>
        <result column="resource_level" property="resourceLevel" jdbcType="INTEGER"/>
        <result column="display_order" property="displayOrder" jdbcType="INTEGER"/>
        <result column="base_url" property="baseUrl" jdbcType="VARCHAR"/>

    </resultMap>
    <sql id="Insert_Column_List">
	  resource_id,
	  menu_id,
	  resource_name,
	  app_id,
	  create_time,
	  create_user,
	  create_userid,
	  status,
	  resource_rule,
	  resource_level,
	  base_url
	</sql>
	
	<select id="findByGroupIdAndAppId" resultMap="privilegeResourceMap" flushCache="true">
		SELECT DISTINCT
			pr.*
		FROM
			privilege_group pg,
			privilege_group_resource pgr,
			privilege_resource pr
		WHERE
			pg.app_id=#{appId}
			AND #{groupId}=pgr.group_id AND pgr.resource_id=pr.resource_id
			
	</select>
	<select id="getResourceListByMenuId" resultMap="privilegeResourceMap" flushCache="true">
         select * from privilege_resource
         where menu_id = #{menuId}
	</select>
	<select id="getResourceListByFunIds" resultMap="privilegeResourceMap" flushCache="true">
         SELECT pr.* FROM privilege_resource pr,privilege_function pf
		WHERE pf.id IN 
		<foreach item="item" index="index" collection="functionIds" open="(" separator="," close=")">  
          #{item}  
        </foreach>
		AND pf.resource_id=pr.resource_id AND pr.app_id=#{appId}
	</select>
	<select id="getResourceListByFunId" resultMap="privilegeResourceMap" flushCache="true">
         SELECT pr.* FROM privilege_resource pr,privilege_function pf
		WHERE pf.id =#{functionId}
		AND pf.resource_id=pr.resource_id and pr.appId=#{appId}
	</select>
	<select id="findAppResources"  resultType="java.lang.String" flushCache="true">
  		 SELECT base_url FROM privilege_resource WHERE app_id =#{appId} AND NOT(base_url IS NULL OR base_url='')
 	</select>
	<select id="findByResource_Id" resultMap="privilegeResourceMap" flushCache="true">
         select * from privilege_resource
         where  resource_id = #{resourceId}
         and app_id=#{appId}
       
	</select>
    <select id="findByResourceId" resultMap="privilegeResourceMap" flushCache="true">
         select * from privilege_resource
         where  resource_id = #{resourceId}
         and app_id=#{appId}
	</select>
    <select id="findResourcePage" resultMap="privilegeResourceMap" flushCache="true">
         select * from privilege_resource
         where  menu_id = #{menuId}
         and app_id=#{appId}
         and resource_level=#{resourceLevel}
         limit #{startRow},#{pageSize} 
	</select>
	<select id="getResourceListByUserId" resultMap="privilegeResourceMap" flushCache="true">
		SELECT DISTINCT d.*
		 FROM privilege_user a,privilege_user_role b,privilege_role_resource c,privilege_resource d
		WHERE a.app_userid=#{appUserId}
         AND a.app_id=#{appId} AND a.uid=b.user_id AND b.privilege_roleid=c.privilege_roleid 
         AND c.resource_id=d.resource_id AND d.app_id=#{appId}
	</select>
	 <select id="getResourceListByAppId" resultMap="privilegeResourceMap" flushCache="true">
	 	select * from privilege_resource where app_id=#{appId}
	 </select>
    <select id="findResourceByAppUserId" parameterType="String" resultMap="privilegeResourceMap" flushCache="true">
        SELECT
      d.*
    FROM privilege_user a,
      privilege_user_role b,
      privilege_role_resource c,
      privilege_resource d
    WHERE app_userid = #{userId}
    AND a.uid = b.user_id
    AND b.privilege_roleid = c.privilege_roleid
    AND c.resource_id = d.resource_id
    </select>
    <update id="updatePrivilegeResource" parameterType="PrivilegeResource" flushCache="true">
        update privilege_resource set
        <if test="menuId != null and menuId !=''">
            menu_id = #{menuId},
        </if>
        <if test="resourceName != null and resourceName !=''">
            resource_name = #{resourceName},
        </if>
        <if test="appId != null and appId !=''">
            app_id = #{appId},
        </if>
        <if test="createUser != null and createUser !=''">
            create_user = #{createUser},
        </if>
        <if test="resourceLevel != null ">
            resource_level = #{resourceLevel},
        </if>
        <if test="createUserId != null and createUserId !=''">
            create_userid = #{createUserId},
        </if>
        <if test="resourceRule != null and resourceRule !=''">
            resource_rule = #{resourceRule},
        </if>
        <if test="baseUrl != null and baseUrl !=''">
            base_url = #{baseUrl},
        </if>
        <if test="status != null ">
            status = #{status},
        </if>
        create_time = #{createTime}
        where resource_id = #{resourceId}
    </update>
    <insert id="savePrivilegeResource" parameterType="PrivilegeResource" flushCache="true">
        insert into privilege_resource
        (resource_id,resource_name,app_id,create_time,create_user,create_userid,resource_rule,resource_level,menu_id,base_url)
        values
        (#{id},#{resourceName},#{appId},#{createTime},#{createUser},#{createUserId},#{resourceRule},#{resourceLevel},#{menuId},#{baseUrl})
    </insert>
    <delete id="deleteByResourceId">
        delete from privilege_resource where resource_id in
        <foreach item="item" index="index" collection="resourceIds" open="(" separator="," close=")">  
          #{item}  
        </foreach>
    </delete>
    <select id="findResourceList" resultMap="privilegeResourceMap" flushCache="true">
        select app_id,resource_id,resource_level,resource_name,resource_rule,display_order,menu_id,base_url,status from privilege_resource where resource_id in
        <foreach item="item" index="index" collection="resourceIds" open="(" separator="," close=")">  
          #{item}  
        </foreach>
    </select>
    
      <select id="findResourceMap" resultType="java.util.Map" flushCache="true">
        select app_id as appId,resource_id as resourceId,resource_level as resourceLevel,resource_name as resourceName,resource_rule as resourceRule,display_order as dislayOrder ,menu_id as menuId,base_url as baseUrl,status from privilege_resource where resource_id in
        <foreach item="item" index="index" collection="resourceIds" open="(" separator="," close=")">  
          #{item}  
        </foreach>
    </select>

</mapper>