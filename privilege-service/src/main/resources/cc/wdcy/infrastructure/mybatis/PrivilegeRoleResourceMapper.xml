<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.open.opensass.privilege.infrastructure.mybatis.PrivilegeRoleResourceRepositoryMyBatis">
	<resultMap type="PrivilegeRoleResource" id="privilegeRoleResourceMap">
		<id column="Id" property="id" jdbcType="INTEGER" />
		<result column="privilege_roleid" property="privilegeRoleId" jdbcType="VARCHAR" />
		<result column="resource_id" property="resourceId" jdbcType="VARCHAR" />
		<result column="privilege_funid" property="privilegeFunId" jdbcType="VARCHAR" />
		<result column="create_user" property="createUser" jdbcType="VARCHAR" />
		<result column="create_userid" property="createUserId" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="status" property="status" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Insert_Column_List">
	  Id,
	  privilege_roleid,
	  resource_id,
	  privilege_funid,
	  create_user,
	  create_userid,
	  create_time,
	  status
	</sql>
	
	<select id="findByPrivilegeRoleId" resultMap="privilegeRoleResourceMap" flushCache="true">
         select * from privilege_role_resource
         where  privilege_roleid = #{privilegeRoleId}
	</select>

	<insert id="savePrivilegeRoleResource" parameterType="PrivilegeRoleResource" useGeneratedKeys="true" keyProperty="Id">
        insert into privilege_role_resource (privilege_roleid,resource_id,privilege_funid,create_user,create_userid,status,create_time)
        values
        (#{privilegeRoleId},#{resourceId},#{privilegeFunId},#{createUser},#{createUserId},#{status},#{createTime})
    </insert>
    
   <update id="updateRoleResourceByRoleId" parameterType="PrivilegeRoleResource" flushCache="true">
        update privilege_role_resource  
        <trim prefix="set" suffixOverrides=","> 
        <if test="privilegeRoleId != null and privilegeRoleId !=''" >
        privilege_roleid = #{privilegeRoleId},
        </if>
        <if test="resourceId != null and resourceId !=''" >
        resource_id = #{resourceId},
        </if>
         <if test="createUser != null and createUser !=''" >
        create_user = #{createUser},
        </if>
         <if test="createUserId != null and createUserId !=''" >
        create_userid = #{createUserId},
        </if>
         <if test="privilegeFunId != null" >
        privilege_funid = #{privilegeFunId},
        </if>
        <if test="status != null" >
        status = #{status}
        </if>
       </trim>
       where Id = #{id}
     </update> 
    
    <delete id="delPrivilegeRoleResource" parameterType="PrivilegeRoleResource">
        delete from privilege_role_resource where id=#{id}
    </delete>
    
    <delete id="delRoleResourceByRoleId">
    	delete from privilege_role_resource where privilege_roleid=#{privilegeRoleId}
    </delete>
    
    <select id="findByRoleIdAndResourceId" resultMap="privilegeRoleResourceMap" flushCache="true">
    	select * from privilege_role_resource 
    	where privilege_roleid = #{0} and resource_id = #{1} LIMIT 1
    </select>

	<select id="findFunctionIds" resultMap="privilegeRoleResourceMap" flushCache="true">
		SELECT
		c.privilege_funid
		FROM
		privilege_user a,
		privilege_user_role b,
		privilege_role_resource c,
		privilege_role pr
		WHERE a.app_id = #{appId} AND a.app_userid=#{userId} AND a.uid=b.user_id
		AND b.privilege_roleid = c.privilege_roleid
		AND b.privilege_roleid = pr.privilege_roleid
		AND pr.status = 0
		AND c.privilege_funid IS NOT NULL
	    AND c.resource_id IN
		<foreach item="item" index="index" collection="resourceIds" open="(" separator="," close=")">
		#{item}
	</foreach>
	</select>

	<select id="findUserResourcesFunId"  resultType="java.lang.String" flushCache="true">
		SELECT c.privilege_funid FROM privilege_user a,privilege_user_role b,privilege_role_resource c,
		privilege_role pr WHERE  a.app_id=#{appId} AND a.app_userid=#{appUserId} AND a.uid=b.user_id
		AND b.privilege_roleid=c.privilege_roleid AND b.privilege_roleid = pr.privilege_roleid AND pr.status=0
		 AND c.privilege_funid IS NOT null
	</select>
	<select id="findUserRoleResources"  resultMap="privilegeRoleResourceMap" flushCache="true">
		SELECT c.* FROM privilege_user a,privilege_user_role b,privilege_role_resource c,privilege_role pr
		WHERE  a.app_id=#{appId} AND a.app_userid=#{appUserId} AND b.privilege_roleid = pr.privilege_roleid AND pr.status=0
		AND a.uid=b.user_id AND b.privilege_roleid=c.privilege_roleid
	</select>
	<select id="findUserResourcesFunIdByResIsNull"  resultType="java.lang.String" flushCache="true">
		SELECT c.privilege_funid FROM privilege_user a,privilege_user_role b,privilege_role_resource c
		WHERE  a.app_id=#{appId} AND a.app_userid=#{appUserId}
		AND a.uid=b.user_id AND b.privilege_roleid=c.privilege_roleid AND c.privilege_funid IS NOT null AND c.resource_id IS null
	</select>
</mapper>